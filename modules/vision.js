const { ImageAnnotatorClient } = require('@google-cloud/vision');

const visionClient = new ImageAnnotatorClient({ keyFilename: process.env.GOOGLE_VISION_KEY_PATH });

async function recognizeVinWithGoogleVision(imagePath) {
    try {
      console.log('–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ VIN —Å –ø–æ–º–æ—â—å—é Google Vision...');
      const [result] = await visionClient.textDetection(imagePath);
      const detections = result.textAnnotations;
      if (detections && detections.length > 0) {
        const text = detections[0].description;
        // –ü—Ä–æ—Å—Ç–æ –∏—â–µ–º –ø–µ—Ä–≤—ã–π –ø–æ–ø–∞–≤—à–∏–π—Å—è 17-–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥
        const vinRegex = /[A-Z0-9]{17}/i;
        const match = text.match(vinRegex);
        if (match) {
            const vin = match[0].toUpperCase();
            console.log(`‚úÖ Google Vision –Ω–∞—à–µ–ª VIN: ${vin}`);
            return vin;
        }
      }
      console.log('üîç Google Vision –Ω–µ –Ω–∞—à–µ–ª 17-–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥.');
      return null;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ Google Vision:', error.message);
      return null;
    }
}

module.exports = { recognizeVinWithGoogleVision }; 